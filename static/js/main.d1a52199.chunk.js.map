{"version":3,"sources":["components/LoginForm.js","components/FindAccount.js","components/Signup.js","components/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["LoginForm","_ref","onSwitchTab","onLoginSuccess","users","username","setUsername","useState","password","setPassword","React","createElement","className","onSubmit","e","preventDefault","user","find","alert","type","value","onChange","target","placeholder","required","onClick","FindAccount","Signup","onSignup","existingUsers","formData","setFormData","confirmPassword","nickname","year","region","catCode","usernameError","setUsernameError","handleChange","name","_objectSpread","includes","style","color","fontSize","Dashboard","id","title","content","map","post","key","App","currentTab","setCurrentTab","isLoggedIn","setIsLoggedIn","setUsers","handleLoginSuccess","handleSignup","prevUsers","renderTab","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.d1a52199.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './LoginForm.css';\r\n\r\nfunction LoginForm({ onSwitchTab, onLoginSuccess, users }) {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const user = users.find((user) => user.username === username);\r\n\r\n    if (user && user.password === password) {\r\n      alert('로그인 성공!');\r\n      onLoginSuccess();\r\n    } else {\r\n      alert('아이디 또는 비밀번호가 올바르지 않습니다.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <form className=\"login-form\" onSubmit={handleSubmit}>\r\n        <h2>로그인</h2>\r\n        <div className=\"form-group\">\r\n          <label>아이디</label>\r\n          <input\r\n            type=\"text\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            placeholder=\"아이디를 입력하세요\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>비밀번호</label>\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            placeholder=\"비밀번호를 입력하세요\"\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"login-button\">로그인</button>\r\n        <div className=\"tabs\">\r\n          <span onClick={() => onSwitchTab('findAccount')} className=\"tab-link\">\r\n            아이디 찾기\r\n          </span>{' '}\r\n          |{' '}\r\n          <span onClick={() => onSwitchTab('findAccount')} className=\"tab-link\">\r\n            비밀번호 찾기\r\n          </span>{' '}\r\n          |{' '}\r\n          <span onClick={() => onSwitchTab('signup')} className=\"tab-link\">\r\n            회원가입\r\n          </span>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginForm;\r\n","import React from 'react';\r\n\r\nfunction FindAccount({ onSwitchTab }) {\r\n  return (\r\n    <div className=\"find-account-container\">\r\n      <h2>아이디/비밀번호 찾기</h2>\r\n      <p>아이디 또는 비밀번호를 찾는 기능을 추가하세요.</p>\r\n      <button onClick={() => onSwitchTab('login')}>로그인 화면으로 돌아가기</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FindAccount;\r\n","import React, { useState } from 'react';\r\n\r\nfunction Signup({ onSwitchTab, onSignup, existingUsers = [] }) {\r\n  const [formData, setFormData] = useState({\r\n    username: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    nickname: '',\r\n    year: '',\r\n    region: '',\r\n    catCode: '',\r\n  });\r\n\r\n  const [usernameError, setUsernameError] = useState(false); // 아이디 중복 에러 상태\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n\r\n    if (name === 'username') {\r\n      // 아이디 중복 여부 확인\r\n      setUsernameError(existingUsers.includes(value));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (usernameError) {\r\n      alert('아이디가 이미 사용 중입니다.');\r\n      return;\r\n    }\r\n\r\n    if (formData.catCode !== '1007') {\r\n      alert('야옹이코드가 올바르지 않습니다.');\r\n      return;\r\n    }\r\n\r\n    if (formData.password !== formData.confirmPassword) {\r\n      alert('비밀번호와 비밀번호 확인이 일치하지 않습니다.');\r\n      return;\r\n    }\r\n\r\n    onSignup(formData);\r\n    alert('회원가입이 완료되었습니다!');\r\n  };\r\n\r\n  return (\r\n    <div className=\"signup-container\">\r\n      <h2>회원가입</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label>아이디</label>\r\n          <input\r\n            name=\"username\"\r\n            value={formData.username}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          {usernameError && (\r\n            <span style={{ color: 'red', fontSize: '12px' }}>\r\n              이미 사용 중인 아이디입니다.\r\n            </span>\r\n          )}\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>비밀번호</label>\r\n          <input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            value={formData.password}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>비밀번호 확인</label>\r\n          <input\r\n            name=\"confirmPassword\"\r\n            type=\"password\"\r\n            value={formData.confirmPassword}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>닉네임</label>\r\n          <input\r\n            name=\"nickname\"\r\n            value={formData.nickname}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>합격년도</label>\r\n          <select\r\n            name=\"year\"\r\n            value={formData.year}\r\n            onChange={handleChange}\r\n            required\r\n          >\r\n            <option value=\"\">선택</option>\r\n            <option value=\"2024\">2024</option>\r\n            <option value=\"2023\">2023</option>\r\n            <option value=\"2022\">2022</option>\r\n            <option value=\"2021\">2021</option>\r\n            <option value=\"2021 이전\">2021년 이전</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>지역</label>\r\n          <select\r\n            name=\"region\"\r\n            value={formData.region}\r\n            onChange={handleChange}\r\n            required\r\n          >\r\n            <option value=\"\">선택</option>\r\n            <option value=\"서울\">서울</option>\r\n            <option value=\"부산\">부산</option>\r\n            <option value=\"대구\">대구</option>\r\n            <option value=\"인천\">인천</option>\r\n            <option value=\"광주\">광주</option>\r\n            <option value=\"대전\">대전</option>\r\n            <option value=\"울산\">울산</option>\r\n            <option value=\"세종\">세종</option>\r\n            <option value=\"경기\">경기</option>\r\n            <option value=\"강원\">강원</option>\r\n            <option value=\"충북\">충북</option>\r\n            <option value=\"충남\">충남</option>\r\n            <option value=\"전북\">전북</option>\r\n            <option value=\"전남\">전남</option>\r\n            <option value=\"경북\">경북</option>\r\n            <option value=\"경남\">경남</option>\r\n            <option value=\"제주\">제주</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>야옹이코드</label>\r\n          <input\r\n            name=\"catCode\"\r\n            value={formData.catCode}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\">회원가입</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n","import React from 'react';\r\n\r\nfunction Dashboard() {\r\n  const posts = [\r\n    { id: 1, title: '첫 번째 게시글', content: '안녕하세요. 첫 번째 게시글입니다.' },\r\n    { id: 2, title: '두 번째 게시글', content: 'React를 배우는 중입니다.' },\r\n    { id: 3, title: '세 번째 게시글', content: '이 게시판은 예제입니다.' },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <h2>대시보드</h2>\r\n      <div className=\"board\">\r\n        {posts.map((post) => (\r\n          <div key={post.id} className=\"board-item\">\r\n            <h3>{post.title}</h3>\r\n            <p>{post.content}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import React, { useState } from 'react';\nimport LoginForm from './components/LoginForm';\nimport FindAccount from './components/FindAccount';\nimport Signup from './components/Signup';\nimport Dashboard from './components/Dashboard';\n\nfunction App() {\n  const [currentTab, setCurrentTab] = useState('login');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [users, setUsers] = useState([]); // 기존 사용자 목록\n\n  const handleLoginSuccess = () => {\n    setIsLoggedIn(true);\n  };\n\n  const handleSignup = (formData) => {\n    setUsers((prevUsers) => [...prevUsers, formData]); // 회원가입 시 사용자 정보 저장\n    setCurrentTab('login');\n  };\n\n  const renderTab = () => {\n    if (isLoggedIn) {\n      return <Dashboard />;\n    }\n\n    switch (currentTab) {\n      case 'login':\n        return (\n          <LoginForm\n            onSwitchTab={setCurrentTab}\n            onLoginSuccess={handleLoginSuccess}\n            users={users} // 사용자 목록 전달\n          />\n        );\n      case 'findAccount':\n        return <FindAccount onSwitchTab={setCurrentTab} />;\n      case 'signup':\n        return (\n          <Signup\n            onSwitchTab={setCurrentTab}\n            onSignup={handleSignup}\n            existingUsers={users.map((user) => user.username)} // 기존 사용자 아이디만 전달\n          />\n        );\n      default:\n        return (\n          <LoginForm\n            onSwitchTab={setCurrentTab}\n            onLoginSuccess={handleLoginSuccess}\n            users={users} // 사용자 목록 전달\n          />\n        );\n    }\n  };\n\n  return <div className=\"App\">{renderTab()}</div>;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}